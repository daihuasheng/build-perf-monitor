# Main configuration for the MyMonitor application.

# ===================================================================
# Monitor-wide settings, now organized into sub-sections.
# ===================================================================
[monitor.general]
# A list of parallelism levels (-j values) to run if none are specified on the command line.
default_jobs = [4, 8, 16]
# If True, plot generation will be skipped after the monitoring run.
skip_plots = false
# The root directory where all run logs and plots will be saved.
log_root_dir = "logs"
# The maximum number of unique command lines to cache for process categorization.
# A larger size may use more memory but can improve performance on extremely
# complex builds with a huge variety of commands. Default is 4096.
categorization_cache_size = 4096

[monitor.collection]
# The time in seconds between each memory sample. Can be a float.
interval_seconds = 0.05
# The type of memory collector to use ('pss_psutil' or 'rss_pidstat').
metric_type = "pss_psutil"
# Defines the scanning mode for the pss_psutil collector.
# - "full_scan": (Default, Safe) Scans all system processes that match the
#   project's process_pattern. This is robust but can be slow.
# - "descendants_only": (Fast, Experimental) Only scans the descendants of the
#   main build process. This is much faster but may miss processes if the build
#   system spawns them in a detached way. Use the `verify_process_tree.py`
#   tool to check if this mode is safe for your project.
pss_collector_mode = "full_scan"

[monitor.scheduling]
# Defines the overall CPU scheduling strategy.
# - "adaptive": (Recommended) Automatically allocates CPU cores for build and
#               monitoring tasks based on the build's parallelism (-j value)
#               and total available system cores. It prioritizes isolating
#               the build process and uses remaining cores for monitoring.
# - "manual":   Allows for precise, manual control over core allocation using
#               the 'manual_*' settings below. Use this for fine-tuning or
#               on complex, non-standard system architectures.
scheduling_policy = "adaptive"

# The CPU core to pin the main monitor script and collectors to.
# Used by both 'adaptive' and 'manual' policies.
monitor_core = 0

# --- Settings for 'manual' scheduling_policy ---
# A string defining specific cores for the build (e.g., '1,2,4-7').
manual_build_cores = ""

# A string defining specific cores for monitoring workers (e.g., '8-15').
manual_monitoring_cores = ""

# ===================================================================
# AsyncIO Monitoring Configuration
# ===================================================================
[monitor.async_settings]
# Maximum number of concurrent monitoring threads
max_monitoring_threads = 4
# Enable CPU affinity for monitoring threads
enable_cpu_affinity = true
# Timeout for monitoring operations (seconds)
monitoring_timeout = 30.0
# Timeout for graceful shutdown (seconds)
graceful_shutdown_timeout = 5.0
# Interval for process checking (seconds)
process_check_interval = 0.1
# Interval for memory collection (seconds)
memory_collection_interval = 1.0
# Maximum number of concurrent async monitors
max_concurrent_monitors = 8
# Enable thread pool optimization
enable_thread_pool_optimization = true
# Thread pool worker thread prefix
thread_name_prefix = "AsyncMonitor"


# ===================================================================
# Paths to specialized configuration files
# ===================================================================
[paths]
projects_config = "projects.toml"
rules_config = "rules.toml"
